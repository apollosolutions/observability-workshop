services:
  router:
    container_name: router
    image: ghcr.io/apollographql/router:v1.19.1
    volumes:
      - ./router.yaml:/dist/config/router.yaml
    env_file:
      - .env
    ports:
      - 4000:4000
  users:
    container_name: users
    build: subgraphs/users
  posts:
    container_name: posts
    build: subgraphs/posts
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml --web.enable-remote-write-receiver
  grafana:
    image: grafana/grafana
    container_name: grafana
    user: '0'
    ports:
      - '3000:3000'
    volumes:
      - './grafana/data:/var/lib/grafana'
  otel-collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - 9411:9411

volumes:
  prometheus-data:
